from operator import itemgetter
import random

def dice_counts(dice):
	list = [0,0,0,0,0,0]
	for num in dice:
		list[num]+=1	
	return list

def small_straight(dice):
 	"""
 	Score the given dice sequence in 'small straight' category
 	>>> small_straight([1,2,3,4,5])
	15
	>>> small_straight([1,2,3,5,5])
	0
	
	It also accepts unsorted lists and sets

	>>> small_straight({1,2,3,4,5})
	15
	>>> small_straight({5,2,3,4,1})
	15

 	"""
 	if sorted(dice) == [1,2,3,4,5]:
 		return sum(dice)
 	return 0



def chance(dice):
	'''
	Score the given dice sequence in 'chance' yatzy category
	>>> chance([5,5,5,5,5])
	25
	>>> chance([1,2,3,4,5])
	15
	'''
	return sum(dice)


def ones(dice):
	'''
	Score the given dice sequence in 'ones' yatzy category
	>>> ones([1,1,2,3,4])
	2
	>>> ones([5,5,2,3,4])
	0
	'''
	return dice_counts(dice)[1]


def twos(dice):
	'''
	Score the given dice sequence in 'twos' yatzy category
	>>> twos([1,2,3,4,5])
	1
	>>> twos([1,3,5,5,1])
	0
	'''
	return dice_counts(dice)[2]


def scores_in_categories(dice, categories=(small_straight, chance, ones, twos)):
	'''
	Score the dice in each category, with highest scoring cateory first
	>>> scores = scores_in_categories([1,1,2,2,2], (ones, twos, small_straight, chance))
	>>> [(score,category.__name__) for (score, category) in scores]
	[(8, 'chance'), (3, 'twos'), (2, 'ones'), (0, 'small_straight')]
	'''
	scores = [(category(dice), category)
			  for category in categories]
	return sorted(scores, reverse=True, key=itemgetter(0))


def roll(number_dice=5):
	'''
	Random number generated by dice throw simulated
	>>> random.seed(1234)
	>>> roll(5)
	[1, 1, 1, 4, 5]
	'''
	return sorted(random.choice((1,2,3,4,5,6))
		for i in range(number_dice))


def dice_counts(dice):
	'''
	>>> dice_counts([1,2,2,3,3])
	{1: 1, 2: 2, 3: 2, 4: 0, 5: 0, 6: 0}
	>>> dice_counts("12345")
	Traceback (most recent call last):
	...
	TypeError : List of Integers expected
	'''
	return {x: dice.count(x) for x in range(1,7)}

# Command to run doctest on this file in terminal:-
# python -m doctest yatzy.py -v

# Command to run doctest on all python files in cwd using terminal:-
# python -m pytest --doctest-modules
